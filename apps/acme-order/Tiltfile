SOURCE_IMAGE_REPO = os.getenv("SOURCE_IMAGE_REPO", default='your-registry.io/project')

allow_k8s_contexts(k8s_context())

k8s_yaml('order-db.yaml')

k8s_resource(new_name='acme-order-db',
			 objects=['acme-order-db'],
			 extra_pod_selectors=[{'postgres-instance': 'acme-order-db'}])

k8s_custom_deploy(
    'acme-fitness-order',
    apply_cmd = "tanzu apps workload apply acme-fitness-order " +
                " --local-path ." +
                " --source-image " + SOURCE_IMAGE_REPO + "/acme-fitness-order-source" +
                " --type web" +
                " --label app.kubernetes.io/part-of=acme-fitness" +
                " --label tanzu.app.live.view=true" +
                " --label tanzu.app.live.view.application.name=acme-fitness-order" +
                " --service-ref db=sql.tanzu.vmware.com/v1:Postgres:acme-order-db" +
				" --annotation autoscaling.knative.dev/minScale=1" +
                " --yes >/dev/null" +
                " && " +
                "kubectl get workload acme-fitness-order -o yaml",
    delete_cmd = "tanzu apps workload delete acme-fitness-order --yes",
    deps = ['src', 'build.gradle'],
    container_selector = 'workload',
    live_update = [
      sync('./build/classes', '/workspace/BOOT-INF/classes')
    ]
)

k8s_resource('acme-fitness-order',
			extra_pod_selectors=[{'serving.knative.dev/service': 'acme-fitness-order'}])

update_settings(max_parallel_updates=3,
				k8s_upsert_timeout_secs=90,
				suppress_unused_image_warnings=None)
